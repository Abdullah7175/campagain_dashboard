"use client";

import { useEffect, useState } from "react";
import Image from "next/image";
import { Chart as ChartJS, BarElement, CategoryScale, LinearScale, Tooltip, Legend } from "chart.js";
import { sources } from "next/dist/compiled/webpack/webpack";

ChartJS.register(BarElement, CategoryScale, LinearScale, Tooltip, Legend);

export default function Home() {
  const [topCardsData, setTopCardsData] = useState({ Registered: 0, Resolved: 0, Pending: 0 });
  const [sdata, setsData] = useState({ Registered: 0, webpage: 0, Mobile_App: 0, Call_Center_CC: 0 });
  const [pivotData, setPivotData] = useState([]);
  const [townPivot, setTownPivot] = useState([]);
  const [firstHalfTowns, setFirstHalfTowns] = useState([]);
  const [secondHalfTowns, setSecondHalfTowns] = useState([]);


  useEffect(() => {
    // Fetch data for top cards
    async function fetchTopCards() {
      try {
        const response = await fetch("/api/cards"); // Endpoint for top cards
        const data = await response.json();
        setTopCardsData(data);
      } catch (error) {
        console.error("Error fetching top cards data:", error);
      }
    }

    fetchTopCards();
  }, []);

  useEffect(() => {
    // Fetch data for top cards
    async function fetchs() {
      try {
        const response = await fetch("/api/complain_sources"); // Endpoint for top cards
        const data = await response.json();
        setsData(data);
      } catch (error) {
        console.error("Error fetching top cards data:", error);
      }
    }

    fetchs();
  }, []);


  useEffect(() => {
    const fetchPivotData = async () => {
      try {
        const response = await fetch("/api/piviot"); // Replace with your actual API endpoint
        const data = await response.json();
        setPivotData(data);
      } catch (error) {
        console.error("Failed to fetch pivot data:", error);
      }
    };

    fetchPivotData();
  }, []);


// Fetch complaints data
useEffect(() => {
  async function fetchData() {
    const response = await fetch("/api/town_piviot_damage"); // Replace with the correct route URL
    const result = await response.json();

    // Prepare unique towns
    const towns = Array.from(new Set(result.map((item) => item.Town)));
    const halfIndex = Math.ceil(towns.length / 2);

    setFirstHalfTowns(towns.slice(0, halfIndex));
    setSecondHalfTowns(towns.slice(halfIndex));

    // Prepare pivot data
    const townPivotData = [
      {
        category: "Pending",
        ...Object.fromEntries(
          towns.map((town) => [
            town,
            result
              .filter((item) => item.Town === town)
              .reduce((acc, item) => acc + item.Pending, 0),
          ])
        ),
      },
      {
        category: "Resolved",
        ...Object.fromEntries(
          towns.map((town) => [
            town,
            result
              .filter((item) => item.Town === town)
              .reduce((acc, item) => acc + item.Resolved, 0),
          ])
        ),
      },
      {
        category: "Percentage",
        ...Object.fromEntries(
          towns.map((town) => [
            town,
            result.filter((item) => item.Town === town).length > 0
              ? (
                result
                  .filter((item) => item.Town === town)
                  .reduce((acc, item) => acc + (item.Percentage_Resolved || 0), 0) /
                result.filter((item) => item.Town === town).length
              ).toFixed(2) + "%"
              : "0.00%"
          ])
        ),
      },
    ];

    setTownPivot(townPivotData);
  }

  fetchData();
}, []);


  return (
  <div className={`min-h-screen flex flex-col`}> 
    {/* Header */} 
    <div className="flex items-center w-full max-4xl justify-between"> 
      {/* Logo */} 
      <Image src="/kl.png" alt="Logo"  width={70} height={70} /> 

      {/* Page Title */} 
      <div className="text-3xl font-bold text-gray-800 text-center flex-1 ml-10">
        CMC | KARACHI WATER & SEWERAGE CORPORATION
      </div>
    </div>

    {/* Main Content */} 
    <main className="flex-grow flex flex-col text-center py-6">
      <div className="text-center font-semibold text-gray-800">
        <h2 className="text-2xl font-bold">MANHOLE CAMPAIGN LIVE REPORT</h2>
        <p className="text-gray-600">Campaign Starting Date: 8th, January 2025</p>
      </div>

      {/* Top Cards */} 
      <div className="grid grid-cols-1 md:grid-cols-3 gap-6 mt-5">
        <div className="bg-[#f5f7fa] p-6 rounded-xl flex items-center justify-between w-full max-w-auto shadow-lg hover:bg-[#e4e9f2] transition-colors">
          <h3 className="text-lg font-semibold text-gray-700">Total Complaints Registered</h3>
          <p className="text-2xl font-bold text-blue-600">{topCardsData.Registered}</p>
        </div>
        <div className="bg-[#f5f7fa] p-6 rounded-xl flex items-center justify-between w-full max-w-auto shadow-lg hover:bg-[#e4e9f2] transition-colors">
          <h3 className="text-lg font-semibold text-gray-700">Total Complaints Resolved</h3>
          <p className="text-2xl font-bold text-green-600">{topCardsData.Resolved}</p>
        </div>
        <div className="bg-[#f5f7fa] p-6 rounded-xl flex items-center justify-between w-full max-w-auto shadow-lg hover:bg-[#e4e9f2] transition-colors">
          <h3 className="text-lg font-semibold text-gray-700">Total Complaints Pending</h3>
          <p className="text-2xl font-bold text-red-600">{topCardsData.Pending}</p>
        </div>
      </div>

            {/* Top Cards */} 
            <div className="grid grid-cols-1 md:grid-cols-3 gap-6 mt-5">
        <div className="bg-[#f5f7fa] p-6 rounded-xl flex items-center justify-between w-full max-w-auto shadow-lg hover:bg-[#e4e9f2] transition-colors">
          <h3 className="text-lg font-semibold text-gray-700">Total Complaints Registered</h3>
          <p className="text-2xl font-bold text-blue-600">{sdata.webpage}</p>
        </div>
        <div className="bg-[#f5f7fa] p-6 rounded-xl flex items-center justify-between w-full max-w-auto shadow-lg hover:bg-[#e4e9f2] transition-colors">
          <h3 className="text-lg font-semibold text-gray-700">Total Complaints Resolved</h3>
          <p className="text-2xl font-bold text-green-600">{sdata.Mobile_App}</p>
        </div>
        <div className="bg-[#f5f7fa] p-6 rounded-xl flex items-center justify-between w-full max-w-auto shadow-lg hover:bg-[#e4e9f2] transition-colors">
          <h3 className="text-lg font-semibold text-gray-700">Total Complaints Pending</h3>
          <p className="text-2xl font-bold text-red-600">{sdata.Call_Center_CC}</p>
        </div>
      </div>

     {/* Pivot Table */}
     <table className="p-6 max-w-auto rounded-xl items-center bg-white shadow-lg mt-5">
        <thead className="bg-gray-200">
          <tr>
            <th className="border p-2">Type</th>
            <th className="border p-2">Received</th>
            <th className="border p-2">Resolved</th>
            <th className="border p-2">Pending</th>
            <th className="border p-2">Resolved (%)</th>
          </tr>
        </thead>
        <tbody>
          {pivotData.map((row, index) => (
            <tr key={index} className="text-center">
              <td className="border p-2">{row.type}</td>
              <td className="border p-2">{row.total_registered}</td>
              <td className="border p-2">{row.resolved}</td>
              <td className="border p-2">{row.pending}</td>
              <td className="border p-2">{row.resolved_percentage}%</td>
            </tr>
          ))}
        </tbody>
      </table>




      

     {/* First Half Pivot Table */}
     <table className="p-6 w-full max-w-auto rounded-xl items-center bg-white shadow-lg mt-5">
        <thead className="bg-gray-200">
          <tr>
            <th className="border p-2">Category</th>
            {firstHalfTowns.map((town, index) => (
              <th key={`first-half-${index}`} className="border p-2">{town}</th>
            ))}
          </tr>
        </thead>
        <tbody>
          {townPivot.map((row, index) => (
            <tr key={`pivot-row-${index}`} className="text-center">
              <td className="border p-2 font-semibold">{row.category}</td>
              {firstHalfTowns.map((town) => (
                <td key={`town-${town}-${index}`} className="border p-2">{row[town] || "N/A"}</td>
              ))}
            </tr>
          ))}
        </tbody>
      </table>

      {/* Second Half Pivot Table */}
      <table className="p-6 w-full max-w-auto rounded-xl items-center bg-white shadow-lg mt-5">
        <thead className="bg-gray-200">
          <tr>
            <th className="border p-2">Category</th>
            {secondHalfTowns.map((town) => (
              <th key={town} className="border p-2">{town}</th>
            ))}
          </tr>
        </thead>
        <tbody>
          {townPivot.map((row, index) => (
            <tr key={index} className="text-center">
              <td className="border p-2 font-semibold">{row.category}</td>
              {secondHalfTowns.map((town) => (
                <td key={town} className="border p-2">{row[town]}</td>
              ))}
            </tr>
          ))}
        </tbody>
      </table>
    </main>





    {/* Footer */} 
    <footer className="bg-gray-800 text-white py-3">
      <div className="container mx-auto text-center">
        <p>&copy; {new Date().getFullYear()} Karachi Water and Sewerage Corporation</p>
      </div>
    </footer>
  </div>
);
}
